image:
  repository: verdaccio/verdaccio
  # tag: defaults to appVersion in Chart.yaml
  pullPolicy: IfNotPresent
  pullSecrets:
    []
    # - dockerhub-secret

nameOverride: ""
fullnameOverride: ""

service:
  annotations: {}
  clusterIP: ""

  ## List of IP addresses at which the service is available
  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
  ##
  externalIPs: []

  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  port: 4873
  type: ClusterIP
  # nodePort: 31873

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: workload
              operator: In
              values:
                - development

## Tolerations for nodes
tolerations: []

## Additional pod labels
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}

## Additional pod annotations
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}

replicaCountEnabled: true
replicaCount: 1

revisionHistoryLimit: 10

## Define Probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
livenessProbe:
  {}
  # initialDelaySeconds: 0
  # periodSeconds: 10
  # timeoutSeconds: 1
  # successThreshold: 1
  # failureThreshold: 3
readinessProbe:
  {}
  # initialDelaySeconds: 0
  # periodSeconds: 10
  # timeoutSeconds: 1
  # successThreshold: 1
  # failureThreshold: 3

resources:
  requests:
    cpu: 250m
    memory: 512Mi
  limits:
    cpu: 1
    memory: 2Gi

ingress:
  enabled: false
  className: ""
  paths:
    - /
  # Use this to define, ALB ingress's actions annotation based routing. Ex: for ssl-redirect
  # Ref: https://kubernetes-sigs.github.io/aws-load-balancer-controller/latest/guide/tasks/ssl_redirect/
  extraPaths: []
# hosts:
#   - npm.blah.com
# annotations:
#   kubernetes.io/ingress.class: nginx
# tls:
#   - secretName: secret
#     hosts:
#       - npm.blah.com

## Service account
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the Chart's fullname template
  name: ""

# Extra Environment Values - allows yaml definitions
# extraEnvVars:
#  - name: VALUE_FROM_SECRET
#    valueFrom:
#      secretKeyRef:
#        name: secret_name
#        key: secret_key
#  - name: REGULAR_VAR
#    value: ABC
extraEnvVars:
  - name: VERDACCIO_PORT
    value: "4873"

## Secret Environment Variables
## Use this to pass sensitive key:values to the container via k8s secret
secretEnvVars:
  {}
  # SECRET_ENV_VAR: secretValue
  # corp_artifactory: foo
  # npmjs: bar

## Existing Secret
## Existing secret containing environment variables to be passed to the container
existingSecret: ""

# Extra Init Containers - allows yaml definitions
extraInitContainers: []

persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires Persistence.Enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## Verdaccio data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

  accessMode: ReadWriteOnce
  size: 12Gi
  ## selector can be used to match an existing PersistentVolume
  ## selector:
  ##   matchLabels:
  ##     app: my-app
  selector: {}

  volumes:
  #  - name: nothing
  #    emptyDir: {}
  mounts:
  # - mountPath: /var/nothing
  #   name: nothing
  #   readOnly: true

podSecurityContext:
  fsGroup: 101
securityContext:
  runAsUser: 10001

priorityClass:
  enabled: false
  # name: ""

existingConfigMap: verdaccio

useSecretHtpasswd: true
# Secrets
secrets:
  #   # list of users and password for htpasswd plugin
  #   # This this is mounted as /verdaccio/auth/htpasswd on pods
  htpasswd:
    - username: admin
      password: admin

# Annotations to set on the deployment
annotations: {}

## Pod Topology Spread Constraints
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# Extra ports to expose from the pod
extraPorts:
  []
  # Example to add a metrics port to the pod and service
  # - port: 9090 # Port to expose on the pod
  #   name: metrics # Name of the port in the service
  #   targetPort: metrics # Name of the port in the pod and in the targetPort for the service
  #   protocol: TCP # Optional, defaults to TCP
  #   nodePort: 30090 # Optional

# Additional manifests to deploy within the chart
## Can be useful to deploy additional secrets, serviceMonitors, etc
extraManifests:
  []
  # - apiVersion: monitoring.coreos.com/v1
  #   kind: ServiceMonitor
  #   metadata:
  #     name: verdaccio
  #   spec:
  #     selector:
  #       matchLabels:
  #         app: verdaccio
  #     endpoints:
  #     - port: metrics

# Additional container with caching nginx
# Can be useful for intensive load
cachingNginx:
  enabled: false
  repository: nginx
  tag: 1.25.0
  pullPolicy: IfNotPresent
  proxyCachePath: "/var/cache/nginx levels=1:2 keys_zone=STATIC:100m inactive=12h max_size=1g;"
  resources: {}
